<!--
  Copyright 2011-2025 Ping Identity Corporation

  This program is free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License (GPLv2 only)
  or the terms of the GNU Lesser General Public License (LGPLv2.1 only)
  as published by the Free Software Foundation.
  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program; if not, see <http://www.gnu.org/licenses>.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <artifactId>scim-parent</artifactId>
        <groupId>com.unboundid.product.scim</groupId>
        <version>2.0.1-SNAPSHOT</version>
    </parent>
    <artifactId>scim-sdk</artifactId>
    <packaging>jar</packaging>
    <name>UnboundID SCIM SDK</name>

    <properties>
        <!-- Note, the 'scim.build.timestamp' property is set in the parent POM using
             the build-number plugin. -->
        <build.product.name>UnboundID SCIM SDK</build.product.name>
        <build.product.short.name>unboundid-scimsdk</build.product.short.name>
        <build.version>${project.version}</build.version>
        <main.basedir>${project.basedir}/..</main.basedir>
        <filtered.dir>${project.build.genSourceDirectory}/filtered</filtered.dir>
        <scimsdk.version>${project.version}</scimsdk.version>
        <messages.dir>${project.build.genSourceDirectory}/messages</messages.dir>
    </properties>

    <profiles>
        <profile>
            <id>UnboundID</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <executions>
                            <execution>
                                <!-- We can't use the maven-gpg-plugin for this because it only signs the actual project artifacts.
                                     Also, gpg can only sign one file at a time, so we have to run the command four times. -->
                                <id>sign-artifacts</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target if="gpg.sign">
                                        <mkdir dir="${project.build.directory}/gpg" />
                                        <exec dir="${project.build.directory}" executable="gpg" inputString="${env.GPG_PASSPHRASE}" failonerror="true">
                                            <arg line="-ab --no-tty --batch --passphrase-fd 0 --output gpg/pom.xml.asc ${project.basedir}/src/main/assemblies/pom.xml" />
                                        </exec>
                                        <exec dir="${project.build.directory}" executable="gpg" inputString="${env.GPG_PASSPHRASE}" failonerror="true">
                                            <arg line="-ab --no-tty --batch --passphrase-fd 0 --output gpg/${project.build.finalName}.jar.asc ${project.build.finalName}.jar" />
                                        </exec>
                                        <exec dir="${project.build.directory}" executable="gpg" inputString="${env.GPG_PASSPHRASE}" failonerror="true">
                                            <arg line="-ab --no-tty --batch --passphrase-fd 0 --output gpg/${project.build.finalName}-sources.jar.asc ${project.build.finalName}-sources.jar" />
                                        </exec>
                                        <exec dir="${project.build.directory}" executable="gpg" inputString="${env.GPG_PASSPHRASE}" failonerror="true">
                                            <arg line="-ab --no-tty --batch --passphrase-fd 0 --output gpg/${project.build.finalName}-javadoc.jar.asc ${project.build.finalName}-javadoc.jar" />
                                        </exec>
                                    </target>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-source-plugin</artifactId>
                        <executions>
                            <execution>
                                <!-- A jar of the project sources is required for publishing to
                                     Maven Central. -->
                                <goals>
                                    <goal>jar</goal>
                                </goals>
                                <configuration>
                                    <archive>
                                        <addMavenDescriptor>false</addMavenDescriptor>
                                    </archive>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-assembly-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>create-zip-archive</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>single</goal>
                                </goals>
                                <configuration>
                                    <descriptors>
                                        <descriptor>${project.basedir}/src/main/assemblies/zip.xml</descriptor>
                                    </descriptors>
                                    <attach>false</attach>
                                    <appendAssemblyId>false</appendAssemblyId>
                                </configuration>
                            </execution>
                            <execution>
                                <!-- We use an assembly instead of the maven-javadoc-plugin to
                                     create the javadoc jar (required for publishing to Maven Central)
                                     because we have copied in certain resources to the javadoc directory.
                                     See the SCIM-Parent POM for more info. -->
                                <id>create-javadoc-archive</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>single</goal>
                                </goals>
                                <configuration>
                                    <descriptors>
                                        <descriptor>${project.basedir}/src/main/assemblies/javadoc.xml</descriptor>
                                    </descriptors>
                                    <attach>false</attach>
                                    <appendAssemblyId>true</appendAssemblyId>
                                </configuration>
                            </execution>
                            <execution>
                                <id>create-sonatype-bundle</id>
                                <phase>install</phase>
                                <goals>
                                    <goal>single</goal>
                                </goals>
                                <configuration>
                                    <descriptors>
                                        <descriptor>${project.basedir}/src/main/assemblies/sonatype-bundle.xml</descriptor>
                                    </descriptors>
                                    <attach>false</attach>
                                    <appendAssemblyId>false</appendAssemblyId>
                                    <finalName>sonatype-bundle</finalName>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <configuration>
                    <headerLocation>config/gpl.sourceheader</headerLocation>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <copy todir="${filtered.dir}">
                                    <fileset dir="src/main/stubs" />
                                    <globmapper from="*.java.stub" to="*.java" />
                                    <filterset>
                                        <filter token="PRODUCT_NAME" value="${build.product.name}" />
                                        <filter token="SHORT_NAME" value="${build.product.short.name}" />
                                        <filter token="VERSION" value="${build.version}" />
                                        <filter token="BUILD_TIMESTAMP" value="${scim.build.timestamp}" />
                                        <filter token="SCM_REVISION" value="${buildNumber}" />
                                    </filterset>
                                </copy>
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>1.5</version>
                <executions>
                  <execution>
                    <id>add-source</id>
                    <phase>generate-sources</phase>
                    <goals>
                      <goal>add-source</goal>
                    </goals>
                    <configuration>
                      <sources>
                          <source>${filtered.dir}</source>
                          <source>${messages.dir}</source>
                      </sources>
                    </configuration>
                  </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <executions>
                  <execution>
                    <id>create-test-jar</id>
                    <goals>
                      <goal>test-jar</goal>
                    </goals>
                  </execution>
                </executions>
            </plugin>
             <plugin>
                <groupId>com.google.code.maven-replacer-plugin</groupId>
                <artifactId>replacer</artifactId>
                <version>1.5.3</version>
                <executions>
                    <execution>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>replace</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <file>${project.basedir}/src/main/doc/getting-started/index.html</file>
                    <outputFile>
                        ${project.build.directory}/docs/getting-started/index.html
                    </outputFile>
                    <regex>false</regex>
                    <replacements>
                        <replacement>
                            <token>$SCIMSDK_VERSION$</token>
                            <value>${scimsdk.version}</value>
                        </replacement>
                    </replacements>
                </configuration>
            </plugin>
            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-antrun-plugin</artifactId>
              <executions>
                <execution>
                  <phase>generate-sources</phase>
                  <configuration>
                    <target>
                      <!-- Properties for generating messages. -->
                      <typedef name="genmsg" classname="com.unboundid.buildtools.messages.GenerateMessages">
                        <classpath refid="maven.plugin.classpath" />
                      </typedef>
                      <genmsg propertiesDir="src/main/resources/messages" generatedSourceDir="${messages.dir}" />
                    </target>
                  </configuration>
                  <goals>
                    <goal>run</goal>
                  </goals>
                </execution>
              </executions>
              <dependencies>
                <dependency>
                  <groupId>com.unboundid.product.scim</groupId>
                  <artifactId>build-tools</artifactId>
                  <version>${project.version}</version>
                </dependency>
              </dependencies>
            </plugin>
        </plugins>
    </build>

    <dependencies>
        <dependency>
          <groupId>com.unboundid.components</groupId>
          <artifactId>json</artifactId>
          <version>1.0.0</version>
        </dependency>
	    <dependency>
	      <groupId>org.eclipse.jetty</groupId>
	      <artifactId>jetty-servlet</artifactId>
	      <version>11.0.20</version>
	    </dependency>
      <dependency>
        <groupId>org.glassfish.jersey.core</groupId>
        <artifactId>jersey-client</artifactId>
        <version>3.0.12</version>
      </dependency>
      <dependency>
        <groupId>org.glassfish.jersey.core</groupId>
        <artifactId>jersey-server</artifactId>
        <version>3.0.12</version>
      </dependency>
      <dependency>
        <groupId>org.glassfish.jersey.connectors</groupId>
        <artifactId>jersey-apache-connector</artifactId>
        <version>3.0.12</version>
      </dependency>
      <dependency>
        <groupId>org.apache.httpcomponents</groupId>
        <artifactId>httpclient</artifactId>
        <version>4.5.14</version>
          <exclusions>
            <exclusion>
              <groupId>commons-codec</groupId>
              <artifactId>commons-codec</artifactId>
            </exclusion>
          </exclusions>
      </dependency>
      <dependency>
        <groupId>com.unboundid</groupId>
        <artifactId>unboundid-ldapsdk</artifactId>
        <version>${ldapsdk.version}</version>
      </dependency>
        <dependency>
            <groupId>jakarta.xml.bind</groupId>
            <artifactId>jakarta.xml.bind-api</artifactId>
            <version>3.0.1</version>
        </dependency>
        <dependency>
            <groupId>jakarta.ws.rs</groupId>
            <artifactId>jakarta.ws.rs-api</artifactId>
            <version>3.1.0</version>
        </dependency>
    </dependencies>
</project>
